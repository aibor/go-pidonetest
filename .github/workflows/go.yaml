name: Test

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Go lint and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["~1.21", "~1.18"]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "${{ matrix.go-version }}"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run vet with all constraints
        run: go vet -tags integration,standalone ./...

      - name: Run go tests
        run: go test -race -v -cover -covermode=atomic ./...

  integration-tests-guest:
    name: Run integration tests for guest
    runs-on: ubuntu-latest
    needs: lint-and-test
    strategy:
      matrix:
        version: ["6.6", "5.15"]
        arch: ["amd64", "arm64"]
        mode: ["wrapped", "standalone"]
    steps:
      - uses: actions/checkout@v3

      - uses: ./integration_tests
        env:
          GOARCH: "${{ matrix.arch }}"
        with:
          kernel-version: "${{ matrix.version }}"
          kernel-arch: "${{ matrix.arch }}"
          cmd: integration_tests/run_guest_tests.sh ${{ matrix.mode }}

  integration-tests-host:
    name: Run integration tests for host
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v3

      - uses: ./integration_tests
        with:
          kernel-version: "${{ matrix.version }}"
          kernel-arch: "${{ matrix.arch }}"
          cmd: go test -race -v -cover -covermode atomic -tags integration ./integration_tests/host/... 
